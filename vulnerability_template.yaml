Parameters:
  Region:
    Type: String
    Description: Please enter the region in which the lambda will be executed
  ApiKey:
    Type: String
    Description: Please enter your Deep Security API Key
  EmailSender:
    Type: String
    Description: Email id to be used for sending report
  EmailRecipients:
    Type: String
    Description: Comma separated email ids for recieving report

Resources:
  LambdaLayer1:
    Type: "AWS::Lambda::LayerVersion"
    Properties:
      CompatibleRuntimes:
        - python3.9
      Content:
        S3Bucket: "vulnerabilitytestbucket"
        S3Key: "python.zip"
      LayerName: "DSlayer"

  # ManagedPolicyforlambda: 
  #   Type: "AWS::IAM::ManagedPolicy"
  #   Properties:
  #     Description: "THis is sample CFN template"
  #     PolicyDocument: 
  #       Version: "2012-10-17"
  #       Statement: 
  #         - Sid: VPCAccess
  #           Effect: "Allow"
  #           Action: 
  #             - "ec2:CreateNetworkInterface"
  #             - "ec2:DeleteNetworkInterface"
  #             - "ec2:DescribeNetworkInterfaces"
  #           Resource: "*"

  LambdaRole: 
    Type: "AWS::IAM::Role"
    Properties: 
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - Effect: "Allow"
            Principal: 
              Service: 
                - "lambda.amazonaws.com" 
            Action: 
              - "sts:AssumeRole"  
      ManagedPolicyArns:
          - arn:aws:iam::aws:policy/AmazonVPCCrossAccountNetworkInterfaceOperations
          # - !Ref ManagedPolicyforlambda 
          - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
          - arn:aws:iam::aws:policy/AmazonInspector2ReadOnlyAccess
          - arn:aws:iam::aws:policy/AmazonSESFullAccess

  LambdaLayerParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: lambda_layer
      Type: String
      Value: "NA"

  LambdaFunction:
    Type: "AWS::Lambda::Function"
    DependsOn:
      - "LambdaLayerParameter"
    Properties:
      Environment:
        Variables:
          region: !Ref Region
          apikey: !Ref ApiKey
          sender: !Ref EmailSender
          recipients: !Ref EmailRecipients
      Code:
        S3Bucket: "vulnerabilitytestbucket"
        S3Key: "lambda_function.py.zip"
      FunctionName: "lambda_function"
      Handler: "lambda_function.lambda_handler"
      Layers:
        - !Ref LambdaLayer1
      Runtime: python3.9
      Timeout: 120
      Role: !GetAtt LambdaRole.Arn

  # Primerinvoke:
  #   Type: AWS::CloudFormation::CustomResource
  #   DependsOn: LambdaFunction
  #   Version: "1.0"
  #   Properties:
  #     ServiceToken: !GetAtt LambdaFunction.Arn


  # Handler: index.handler
  #   Role: YourLambdaRoleARN
  #   Runtime: python3.7
  #   Timeout: 5